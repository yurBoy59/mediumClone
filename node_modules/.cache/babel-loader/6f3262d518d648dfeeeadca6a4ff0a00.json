{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurBoy\\\\Desktop\\\\bobNode\\\\hook-app\\\\medium_clone\\\\src\\\\node_modules\\\\pages\\\\authentication\\\\index.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link, Redirect } from 'react-router-dom'; // import axios from 'axios'\n\nimport useFetch from 'hooks/useFetch';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport { CurrentUserContext } from 'contexts/currentUser';\n\nconst Authentication = props => {\n  const isLogin = props.match.path === '/login';\n  const pageTitle = isLogin ? 'Sign in' : 'Sign up';\n  const descriptionLink = isLogin ? '/register' : '/login';\n  const descriptionText = isLogin ? 'Need an account' : 'Have an account';\n  const apiUrl = isLogin ? '/users/login' : '/users';\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false);\n  const [{\n    response,\n    isLoading,\n    error\n  }, doFetch] = useFetch(apiUrl);\n  const [token, setToken] = useLocalStorage('token');\n  const [currentUserState, setCurrentUserState] = useContext(CurrentUserContext);\n  console.log('CurrentUserState', currentUserState);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('values', email, password);\n    const user = isLogin ? {\n      email,\n      password\n    } : {\n      email,\n      password,\n      username\n    };\n    doFetch({\n      method: 'post',\n      data: {\n        user\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!response) {\n      return;\n    }\n\n    setToken(response.user.token);\n    setIsSuccessfullSubmit(true);\n    setCurrentUserState(state => ({ ...state,\n      isLoggedIn: true,\n      isLoading: false,\n      currentUser: response.user\n    }));\n  }, [response, setToken]);\n\n  if (isSuccessfullSubmit) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"auth-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 offset-md-3 col-xs-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-xs-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, pageTitle), React.createElement(\"p\", {\n    className: \"text-xs-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: descriptionLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, descriptionText)), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, error && React.createElement(BackendErrorMessages, {\n    backendErrors: error.errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, !isLogin && React.createElement(\"fieldset\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control form-control-lg\",\n    placeholder: \"UserName\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"fieldset\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control form-control-lg\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"fieldset\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control form-control-lg\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    disabled: isLoading,\n    className: \"btn btn-lg btn-primary pull-xs-right\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, pageTitle)))))));\n};\n\nexport default Authentication;","map":{"version":3,"sources":["C:/Users/yurBoy/Desktop/bobNode/hook-app/medium_clone/src/node_modules/pages/authentication/index.js"],"names":["React","useState","useEffect","useContext","Link","Redirect","useFetch","useLocalStorage","CurrentUserContext","Authentication","props","isLogin","match","path","pageTitle","descriptionLink","descriptionText","apiUrl","email","setEmail","password","setPassword","username","setUsername","isSuccessfullSubmit","setIsSuccessfullSubmit","response","isLoading","error","doFetch","token","setToken","currentUserState","setCurrentUserState","console","log","handleSubmit","event","preventDefault","user","method","data","state","isLoggedIn","currentUser","errors","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport {Link, Redirect} from 'react-router-dom'\n// import axios from 'axios'\n\nimport useFetch from 'hooks/useFetch'\nimport useLocalStorage from 'hooks/useLocalStorage'\nimport {CurrentUserContext} from 'contexts/currentUser'\n\nconst Authentication = props => {\n  const isLogin = props.match.path === '/login'\n  const pageTitle = isLogin ? 'Sign in' : 'Sign up'\n  const descriptionLink = isLogin ? '/register' : '/login'\n  const descriptionText = isLogin ? 'Need an account' : 'Have an account'\n  const apiUrl = isLogin ? '/users/login' : '/users'\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [username, setUsername] = useState('')\n  const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false)\n  const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n  const [token, setToken] = useLocalStorage('token')\n  const [currentUserState, setCurrentUserState] = useContext(CurrentUserContext)\n\n  console.log('CurrentUserState', currentUserState)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    console.log('values', email, password)\n    const user = isLogin ? {email, password} : {email, password, username}\n    doFetch({\n      method: 'post',\n      data:{\n        user\n      }  \n    })\n  }\n\n  useEffect (()=>{\n    if(!response){\n      return\n    }\n    setToken(response.user.token)\n    setIsSuccessfullSubmit(true)\n    setCurrentUserState(state =>({\n      ...state,\n      isLoggedIn: true,\n      isLoading: false,\n      currentUser: response.user\n    }))\n  }, [response, setToken])\n\n  if(isSuccessfullSubmit){\n    return <Redirect to='/' />\n  }\n\n  return (\n    <div className=\"auth-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">{pageTitle}</h1>\n            <p className=\"text-xs-center\">\n              <Link to={descriptionLink}>{descriptionText}</Link>\n            </p>\n            <form onSubmit={handleSubmit}>\n              {error && <BackendErrorMessages backendErrors={error.errors}/>}\n              <fieldset>\n                {!isLogin &&(\n                  <fieldset className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"UserName\"\n                      value={username}\n                      onChange={e => setUsername(e.target.value)}\n                    />\n                  </fieldset>\n                )}\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                  />\n                </fieldset>\n                <button\n                  disabled={isLoading}\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\n                  type=\"submit\"\n                >\n                  {pageTitle}\n                </button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Authentication\n"]},"metadata":{},"sourceType":"module"}