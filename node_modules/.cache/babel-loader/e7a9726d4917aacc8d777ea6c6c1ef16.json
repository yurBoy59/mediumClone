{"ast":null,"code":"import { useEffect, useContext } from 'react';\nimport useFetch from 'hooks/useFetch';\nimport { CurrentUserContext } from 'contexts/currentUser';\nimport useLocalStorage from 'hooks/useLocalStorage';\n\nconst CurrentUserChecker = ({\n  children\n}) => {\n  const [, setCurrentUserState] = useContext(CurrentUserContext);\n  const [{\n    response\n  }, doFetch] = useFetch('/user');\n  const [token] = useLocalStorage('token');\n  useEffect(() => {\n    if (!token) {\n      setCurrentUserState(state => ({ ...state,\n        isLoggedIn: false\n      }));\n      return;\n    }\n\n    doFetch();\n    setCurrentUserState(state => ({ ...state,\n      isLoading: true\n    }));\n  }, [doFetch, setCurrentUserState, token]);\n  useEffect(() => {\n    if (!response) {\n      return;\n    }\n\n    setCurrentUserState(state => ({ ...state,\n      isLoggedIn: true,\n      isLoading: false,\n      currentUser: response.user\n    }));\n  }, [response, setCurrentUserState]);\n  return children;\n};\n\nexport default CurrentUserChecker;","map":{"version":3,"sources":["C:/Users/yurBoy/Desktop/bobNode/hook-app/medium_clone/src/node_modules/components/currentUserCheker.js"],"names":["useEffect","useContext","useFetch","CurrentUserContext","useLocalStorage","CurrentUserChecker","children","setCurrentUserState","response","doFetch","token","state","isLoggedIn","isLoading","currentUser","user"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,UAAnB,QAAoC,OAApC;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAAQC,kBAAR,QAAiC,sBAAjC;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACzC,QAAM,GAAGC,mBAAH,IAA0BN,UAAU,CAACE,kBAAD,CAA1C;AACA,QAAM,CAAC;AAACK,IAAAA;AAAD,GAAD,EAAaC,OAAb,IAAwBP,QAAQ,CAAC,OAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,IAAUN,eAAe,CAAC,OAAD,CAA/B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,KAAL,EAAY;AACVH,MAAAA,mBAAmB,CAACI,KAAK,KAAK,EAC5B,GAAGA,KADyB;AAE5BC,QAAAA,UAAU,EAAE;AAFgB,OAAL,CAAN,CAAnB;AAIA;AACD;;AAEDH,IAAAA,OAAO;AACPF,IAAAA,mBAAmB,CAACI,KAAK,KAAK,EAC5B,GAAGA,KADyB;AAE5BE,MAAAA,SAAS,EAAE;AAFiB,KAAL,CAAN,CAAnB;AAID,GAdQ,EAcN,CAACJ,OAAD,EAAUF,mBAAV,EAA+BG,KAA/B,CAdM,CAAT;AAgBAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,QAAL,EAAe;AACb;AACD;;AAEDD,IAAAA,mBAAmB,CAACI,KAAK,KAAK,EAC5B,GAAGA,KADyB;AAE5BC,MAAAA,UAAU,EAAE,IAFgB;AAG5BC,MAAAA,SAAS,EAAE,KAHiB;AAI5BC,MAAAA,WAAW,EAAEN,QAAQ,CAACO;AAJM,KAAL,CAAN,CAAnB;AAMD,GAXQ,EAWN,CAACP,QAAD,EAAWD,mBAAX,CAXM,CAAT;AAYA,SAAOD,QAAP;AACD,CAlCD;;AAoCA,eAAeD,kBAAf","sourcesContent":["import {useEffect, useContext} from 'react'\r\n\r\nimport useFetch from 'hooks/useFetch'\r\nimport {CurrentUserContext} from 'contexts/currentUser'\r\nimport useLocalStorage from 'hooks/useLocalStorage'\r\n\r\nconst CurrentUserChecker = ({children}) => {\r\n  const [, setCurrentUserState] = useContext(CurrentUserContext)\r\n  const [{response}, doFetch] = useFetch('/user')\r\n  const [token] = useLocalStorage('token')\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setCurrentUserState(state => ({\r\n        ...state,\r\n        isLoggedIn: false\r\n      }))\r\n      return\r\n    }\r\n\r\n    doFetch()\r\n    setCurrentUserState(state => ({\r\n      ...state,\r\n      isLoading: true\r\n    }))\r\n  }, [doFetch, setCurrentUserState, token])\r\n\r\n  useEffect(() => {\r\n    if (!response) {\r\n      return\r\n    }\r\n\r\n    setCurrentUserState(state => ({\r\n      ...state,\r\n      isLoggedIn: true,\r\n      isLoading: false,\r\n      currentUser: response.user\r\n    }))\r\n  }, [response, setCurrentUserState])\r\n  return children\r\n}\r\n\r\nexport default CurrentUserChecker\r\n"]},"metadata":{},"sourceType":"module"}