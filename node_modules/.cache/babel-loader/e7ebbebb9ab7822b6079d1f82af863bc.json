{"ast":null,"code":"import { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport useLocalStorage from 'hooks/useLocalStorage';\nexport default (url => {\n  const baseUrl = 'https://conduit.productionready.io/api';\n  const [isLoading, setIsLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [options, setOptions] = useState({});\n  const [token] = useLocalStorage('token');\n  const doFetch = useCallback((options = {}) => {\n    setOptions(options);\n    setIsLoading(true);\n  }, []);\n  useEffect(() => {\n    if (!isLoading) {\n      return;\n    }\n\n    const requestOptions = { ...options,\n      ...{\n        headers: {\n          authorization: token ? `Token ${token}` : ''\n        }\n      }\n    };\n    axios(baseUrl + url, requestOptions).then(res => {\n      setResponse(res.data);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error.response.data);\n      setIsLoading(false);\n    });\n  }, [isLoading, url, options, token]);\n  return [{\n    isLoading,\n    response,\n    error\n  }, doFetch];\n});","map":{"version":3,"sources":["C:/Users/yurBoy/Desktop/bobNode/hook-app/medium_clone/src/node_modules/hooks/useFetch.js"],"names":["useState","useEffect","useCallback","axios","useLocalStorage","url","baseUrl","isLoading","setIsLoading","response","setResponse","error","setError","options","setOptions","token","doFetch","requestOptions","headers","authorization","then","res","data","catch"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,WAA7B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,uBAA5B;AAEA,gBAAeC,GAAG,IAAI;AACpB,QAAMC,OAAO,GAAG,wCAAhB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,KAAD,IAAUX,eAAe,CAAC,OAAD,CAA/B;AAEA,QAAMY,OAAO,GAAGd,WAAW,CAAC,CAACW,OAAO,GAAG,EAAX,KAAkB;AAC5CC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAH0B,EAGxB,EAHwB,CAA3B;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,SAAL,EAAgB;AACd;AACD;;AAED,UAAMU,cAAc,GAAG,EACrB,GAAGJ,OADkB;AAErB,SAAG;AACDK,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAEJ,KAAK,GAAI,SAAQA,KAAM,EAAlB,GAAsB;AADnC;AADR;AAFkB,KAAvB;AASAZ,IAAAA,KAAK,CAACG,OAAO,GAAGD,GAAX,EAAgBY,cAAhB,CAAL,CACGG,IADH,CACQC,GAAG,IAAI;AACXX,MAAAA,WAAW,CAACW,GAAG,CAACC,IAAL,CAAX;AACAd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJH,EAKGe,KALH,CAKSZ,KAAK,IAAI;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACF,QAAN,CAAea,IAAhB,CAAR;AACAd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARH;AASD,GAvBQ,EAuBN,CAACD,SAAD,EAAYF,GAAZ,EAAiBQ,OAAjB,EAA0BE,KAA1B,CAvBM,CAAT;AAyBA,SAAO,CAAC;AAACR,IAAAA,SAAD;AAAYE,IAAAA,QAAZ;AAAsBE,IAAAA;AAAtB,GAAD,EAA+BK,OAA/B,CAAP;AACD,CAvCD","sourcesContent":["import {useState, useEffect, useCallback} from 'react'\nimport axios from 'axios'\n\nimport useLocalStorage from 'hooks/useLocalStorage'\n\nexport default url => {\n  const baseUrl = 'https://conduit.productionready.io/api'\n  const [isLoading, setIsLoading] = useState(false)\n  const [response, setResponse] = useState(null)\n  const [error, setError] = useState(null)\n  const [options, setOptions] = useState({})\n  const [token] = useLocalStorage('token')\n\n  const doFetch = useCallback((options = {}) => {\n    setOptions(options)\n    setIsLoading(true)\n  }, [])\n\n  useEffect(() => {\n    if (!isLoading) {\n      return\n    }\n\n    const requestOptions = {\n      ...options,\n      ...{\n        headers: {\n          authorization: token ? `Token ${token}` : ''\n        }\n      }\n    }\n\n    axios(baseUrl + url, requestOptions)\n      .then(res => {\n        setResponse(res.data)\n        setIsLoading(false)\n      })\n      .catch(error => {\n        setError(error.response.data)\n        setIsLoading(false)\n      })\n  }, [isLoading, url, options, token])\n\n  return [{isLoading, response, error}, doFetch]\n}\n"]},"metadata":{},"sourceType":"module"}