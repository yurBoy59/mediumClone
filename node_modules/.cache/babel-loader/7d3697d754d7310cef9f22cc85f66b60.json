{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default (url => {\n  const baseUrl = 'https://conduit.productionready.io/api';\n  const [isLoading, setIsLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [options, setOptions] = useState({});\n\n  const doFetch = (options = {}) => {\n    setOptions(options);\n    setIsLoading(true);\n  };\n\n  useEffect(() => {\n    if (!isLoading) {\n      return;\n    }\n\n    axios(baseUrl + url, options).then(res => {\n      setResponse(res.data);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error.response.data);\n      setIsLoading(false);\n    });\n  }, [isLoading, url, options]);\n  return [{\n    isLoading,\n    response,\n    error\n  }, doFetch];\n});","map":{"version":3,"sources":["C:/Users/yurBoy/Desktop/bobNode/hook-app/medium_clone/src/node_modules/hooks/useFetch.js"],"names":["useState","useEffect","axios","url","baseUrl","isLoading","setIsLoading","response","setResponse","error","setError","options","setOptions","doFetch","then","res","data","catch"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,gBAAeC,GAAG,IAAI;AACpB,QAAMC,OAAO,GAAG,wCAAhB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMa,OAAO,GAAG,CAACF,OAAO,GAAG,EAAX,KAAkB;AAChCC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACI,SAAL,EAAgB;AACd;AACD;;AAEDH,IAAAA,KAAK,CAACE,OAAO,GAAGD,GAAX,EAAgBQ,OAAhB,CAAL,CACGG,IADH,CACQC,GAAG,IAAI;AACXP,MAAAA,WAAW,CAACO,GAAG,CAACC,IAAL,CAAX;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJH,EAKGW,KALH,CAKSR,KAAK,IAAI;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACF,QAAN,CAAeS,IAAhB,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARH;AASD,GAdQ,EAcN,CAACD,SAAD,EAAYF,GAAZ,EAAiBQ,OAAjB,CAdM,CAAT;AAgBA,SAAO,CAAC;AAACN,IAAAA,SAAD;AAAYE,IAAAA,QAAZ;AAAsBE,IAAAA;AAAtB,GAAD,EAA+BI,OAA/B,CAAP;AACD,CA7BD","sourcesContent":["import {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nexport default url => {\n  const baseUrl = 'https://conduit.productionready.io/api'\n  const [isLoading, setIsLoading] = useState(false)\n  const [response, setResponse] = useState(null)\n  const [error, setError] = useState(null)\n  const [options, setOptions] = useState({})\n\n  const doFetch = (options = {}) => {\n    setOptions(options)\n    setIsLoading(true)\n  }\n\n  useEffect(() => {\n    if (!isLoading) {\n      return\n    }\n\n    axios(baseUrl + url, options)\n      .then(res => {\n        setResponse(res.data)\n        setIsLoading(false)\n      })\n      .catch(error => {\n        setError(error.response.data)\n        setIsLoading(false)\n      })\n  }, [isLoading, url, options])\n\n  return [{isLoading, response, error}, doFetch]\n}\n"]},"metadata":{},"sourceType":"module"}